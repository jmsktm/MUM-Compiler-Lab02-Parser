/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import java.util.*;
import node.*;

public class ReversedDepthFirstAdapter extends AnalysisAdapter
{
    public void inStart(Start node)
    {
        defaultIn(node);
    }

    public void outStart(Start node)
    {
        defaultOut(node);
    }

    public void defaultIn(@SuppressWarnings("unused") Node node)
    {
        // Do nothing
    }

    public void defaultOut(@SuppressWarnings("unused") Node node)
    {
        // Do nothing
    }

    @Override
    public void caseStart(Start node)
    {
        inStart(node);
        node.getEOF().apply(this);
        node.getPProgram().apply(this);
        outStart(node);
    }

    public void inAProgram(AProgram node)
    {
        defaultIn(node);
    }

    public void outAProgram(AProgram node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAProgram(AProgram node)
    {
        inAProgram(node);
        if(node.getClassDecls() != null)
        {
            node.getClassDecls().apply(this);
        }
        outAProgram(node);
    }

    public void inAMultClassDeclsClassDecls(AMultClassDeclsClassDecls node)
    {
        defaultIn(node);
    }

    public void outAMultClassDeclsClassDecls(AMultClassDeclsClassDecls node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAMultClassDeclsClassDecls(AMultClassDeclsClassDecls node)
    {
        inAMultClassDeclsClassDecls(node);
        if(node.getClassDecl() != null)
        {
            node.getClassDecl().apply(this);
        }
        if(node.getClassDecls() != null)
        {
            node.getClassDecls().apply(this);
        }
        outAMultClassDeclsClassDecls(node);
    }

    public void inAClassDecls(AClassDecls node)
    {
        defaultIn(node);
    }

    public void outAClassDecls(AClassDecls node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAClassDecls(AClassDecls node)
    {
        inAClassDecls(node);
        if(node.getClassDecl() != null)
        {
            node.getClassDecl().apply(this);
        }
        outAClassDecls(node);
    }

    public void inAEmptyClassDeclClassDecl(AEmptyClassDeclClassDecl node)
    {
        defaultIn(node);
    }

    public void outAEmptyClassDeclClassDecl(AEmptyClassDeclClassDecl node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAEmptyClassDeclClassDecl(AEmptyClassDeclClassDecl node)
    {
        inAEmptyClassDeclClassDecl(node);
        if(node.getRBrace() != null)
        {
            node.getRBrace().apply(this);
        }
        if(node.getLBrace() != null)
        {
            node.getLBrace().apply(this);
        }
        if(node.getClassHdr() != null)
        {
            node.getClassHdr().apply(this);
        }
        outAEmptyClassDeclClassDecl(node);
    }

    public void inAClassDecl(AClassDecl node)
    {
        defaultIn(node);
    }

    public void outAClassDecl(AClassDecl node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAClassDecl(AClassDecl node)
    {
        inAClassDecl(node);
        if(node.getRBrace() != null)
        {
            node.getRBrace().apply(this);
        }
        if(node.getMemberDecls() != null)
        {
            node.getMemberDecls().apply(this);
        }
        if(node.getLBrace() != null)
        {
            node.getLBrace().apply(this);
        }
        if(node.getClassHdr() != null)
        {
            node.getClassHdr().apply(this);
        }
        outAClassDecl(node);
    }

    public void inAClassHdr(AClassHdr node)
    {
        defaultIn(node);
    }

    public void outAClassHdr(AClassHdr node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAClassHdr(AClassHdr node)
    {
        inAClassHdr(node);
        if(node.getIdentifier() != null)
        {
            node.getIdentifier().apply(this);
        }
        if(node.getKclass() != null)
        {
            node.getKclass().apply(this);
        }
        outAClassHdr(node);
    }

    public void inAMultMemberDeclMemberDecls(AMultMemberDeclMemberDecls node)
    {
        defaultIn(node);
    }

    public void outAMultMemberDeclMemberDecls(AMultMemberDeclMemberDecls node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAMultMemberDeclMemberDecls(AMultMemberDeclMemberDecls node)
    {
        inAMultMemberDeclMemberDecls(node);
        if(node.getMemberDecl() != null)
        {
            node.getMemberDecl().apply(this);
        }
        if(node.getMemberDecls() != null)
        {
            node.getMemberDecls().apply(this);
        }
        outAMultMemberDeclMemberDecls(node);
    }

    public void inAMemberDecls(AMemberDecls node)
    {
        defaultIn(node);
    }

    public void outAMemberDecls(AMemberDecls node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAMemberDecls(AMemberDecls node)
    {
        inAMemberDecls(node);
        if(node.getMemberDecl() != null)
        {
            node.getMemberDecl().apply(this);
        }
        outAMemberDecls(node);
    }

    public void inAIntDeclMemberDecl(AIntDeclMemberDecl node)
    {
        defaultIn(node);
    }

    public void outAIntDeclMemberDecl(AIntDeclMemberDecl node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAIntDeclMemberDecl(AIntDeclMemberDecl node)
    {
        inAIntDeclMemberDecl(node);
        if(node.getSemicolon() != null)
        {
            node.getSemicolon().apply(this);
        }
        if(node.getIdentifier() != null)
        {
            node.getIdentifier().apply(this);
        }
        if(node.getInt() != null)
        {
            node.getInt().apply(this);
        }
        outAIntDeclMemberDecl(node);
    }

    public void inABoolDeclMemberDecl(ABoolDeclMemberDecl node)
    {
        defaultIn(node);
    }

    public void outABoolDeclMemberDecl(ABoolDeclMemberDecl node)
    {
        defaultOut(node);
    }

    @Override
    public void caseABoolDeclMemberDecl(ABoolDeclMemberDecl node)
    {
        inABoolDeclMemberDecl(node);
        if(node.getSemicolon() != null)
        {
            node.getSemicolon().apply(this);
        }
        if(node.getIdentifier() != null)
        {
            node.getIdentifier().apply(this);
        }
        if(node.getBool() != null)
        {
            node.getBool().apply(this);
        }
        outABoolDeclMemberDecl(node);
    }

    public void inACharDeclMemberDecl(ACharDeclMemberDecl node)
    {
        defaultIn(node);
    }

    public void outACharDeclMemberDecl(ACharDeclMemberDecl node)
    {
        defaultOut(node);
    }

    @Override
    public void caseACharDeclMemberDecl(ACharDeclMemberDecl node)
    {
        inACharDeclMemberDecl(node);
        if(node.getSemicolon() != null)
        {
            node.getSemicolon().apply(this);
        }
        if(node.getIdentifier() != null)
        {
            node.getIdentifier().apply(this);
        }
        if(node.getChar() != null)
        {
            node.getChar().apply(this);
        }
        outACharDeclMemberDecl(node);
    }

    public void inAStringDeclMemberDecl(AStringDeclMemberDecl node)
    {
        defaultIn(node);
    }

    public void outAStringDeclMemberDecl(AStringDeclMemberDecl node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAStringDeclMemberDecl(AStringDeclMemberDecl node)
    {
        inAStringDeclMemberDecl(node);
        if(node.getSemicolon() != null)
        {
            node.getSemicolon().apply(this);
        }
        if(node.getIdentifier() != null)
        {
            node.getIdentifier().apply(this);
        }
        if(node.getString() != null)
        {
            node.getString().apply(this);
        }
        outAStringDeclMemberDecl(node);
    }
}
