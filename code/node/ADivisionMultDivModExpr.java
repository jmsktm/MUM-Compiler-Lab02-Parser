/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class ADivisionMultDivModExpr extends PMultDivModExpr
{
    private PUnitaryExpr _unitarySrc_;
    private TDiv _div_;
    private PUnitaryExpr _unitaryTarget_;

    public ADivisionMultDivModExpr()
    {
        // Constructor
    }

    public ADivisionMultDivModExpr(
        @SuppressWarnings("hiding") PUnitaryExpr _unitarySrc_,
        @SuppressWarnings("hiding") TDiv _div_,
        @SuppressWarnings("hiding") PUnitaryExpr _unitaryTarget_)
    {
        // Constructor
        setUnitarySrc(_unitarySrc_);

        setDiv(_div_);

        setUnitaryTarget(_unitaryTarget_);

    }

    @Override
    public Object clone()
    {
        return new ADivisionMultDivModExpr(
            cloneNode(this._unitarySrc_),
            cloneNode(this._div_),
            cloneNode(this._unitaryTarget_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADivisionMultDivModExpr(this);
    }

    public PUnitaryExpr getUnitarySrc()
    {
        return this._unitarySrc_;
    }

    public void setUnitarySrc(PUnitaryExpr node)
    {
        if(this._unitarySrc_ != null)
        {
            this._unitarySrc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._unitarySrc_ = node;
    }

    public TDiv getDiv()
    {
        return this._div_;
    }

    public void setDiv(TDiv node)
    {
        if(this._div_ != null)
        {
            this._div_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._div_ = node;
    }

    public PUnitaryExpr getUnitaryTarget()
    {
        return this._unitaryTarget_;
    }

    public void setUnitaryTarget(PUnitaryExpr node)
    {
        if(this._unitaryTarget_ != null)
        {
            this._unitaryTarget_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._unitaryTarget_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._unitarySrc_)
            + toString(this._div_)
            + toString(this._unitaryTarget_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._unitarySrc_ == child)
        {
            this._unitarySrc_ = null;
            return;
        }

        if(this._div_ == child)
        {
            this._div_ = null;
            return;
        }

        if(this._unitaryTarget_ == child)
        {
            this._unitaryTarget_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._unitarySrc_ == oldChild)
        {
            setUnitarySrc((PUnitaryExpr) newChild);
            return;
        }

        if(this._div_ == oldChild)
        {
            setDiv((TDiv) newChild);
            return;
        }

        if(this._unitaryTarget_ == oldChild)
        {
            setUnitaryTarget((PUnitaryExpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
